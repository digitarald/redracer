<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class User extends BaseUser
{
	/**
	 * toArray
	 *
	 * @param      boolean $deep - Return also the relations
	 * @return     array
	 */
	public function toArray($deep = false, $prefixKey = false)
	{
		$ret = parent::toArray($deep, $prefixKey);

		if (!isset($ret['nickname'])) {
			return $ret;
		}

		$ret['display_name'] = $this->getDisplayName();
		$ret['url_view'] = $this->getUrlView();
		$ret['url_avatar'] = $this->getUrlAvatar();

		return $ret;
	}

	/**
	 * setPassword
	 *
	 * @param      string Word
	 */
	public function setPassword($word) {
		$this->_set('password', hash('sha256', $word));
	}

	/**
	 * getDisplayName
	 *
	 * @return     string
	 */
	public function getDisplayName()
	{
		$nickname = $this['nickname'];
		if ($this['fullname']) {
			if ($nickname) {
				return $this['fullname'] . ' (' . $nickname . ')';
			}
			return $this['fullname'];
		}
		if ($nickname) {
			return $nickname;
		}

		$url = $this['user_tokens'][0];
		if ($url && $url->exists()) {
			return $url['url'];
		}

		return $this['id'];
	}

	/**
	 * getUrl
	 *
	 * @return     string
	 */
	public function getUrlView()
	{
		return $this->getContext()->getRouting()->gen('users.user.view', array(
			'user' => $this['id']
		) );
	}

	/**
	 * getUrlAvatar
	 *
	 * @return     string
	 */
	public function getUrlAvatar()
	{
		return sprintf('http://www.gravatar.com/avatar/%s?s=%s&amp;d=%s',
			md5($this['email']),
			AgaviConfig::get('org.redracer.config.account.gravatar_size', 50),
			urlencode(AgaviConfig::get('org.redracer.config.account.gravatar_default'))
		);
	}

}