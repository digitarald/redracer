<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseTask extends RedRacerDoctrineRecord
{
  public function setTableDefinition()
  {
    $this->setTableName('tasks');
    $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'unsigned' => true, 'length' => '4'));
    $this->hasColumn('created_user_id', 'integer', 4, array('type' => 'integer', 'unsigned' => true, 'length' => '4'));
    $this->hasColumn('updated_user_id', 'integer', 4, array('type' => 'integer', 'unsigned' => true, 'length' => '4'));
    $this->hasColumn('resource_id', 'integer', 4, array('type' => 'integer', 'unsigned' => true, 'length' => '4'));
    $this->hasColumn('assigned_user_id', 'integer', 4, array('type' => 'integer', 'unsigned' => true, 'length' => '4'));
    $this->hasColumn('flag', 'integer', 3, array('type' => 'integer', 'unsigned' => true, 'notnull' => true, 'default' => 0, 'length' => '3'));
    $this->hasColumn('category', 'integer', 1, array('type' => 'integer', 'unsigned' => true, 'notnull' => true, 'default' => 0, 'length' => '1'));
    $this->hasColumn('priority', 'integer', 1, array('type' => 'integer', 'unsigned' => true, 'notnull' => true, 'default' => 0, 'length' => '1'));
    $this->hasColumn('status', 'integer', 1, array('type' => 'integer', 'unsigned' => true, 'notnull' => true, 'default' => 0, 'length' => '1'));
    $this->hasColumn('title', 'string', 50, array('type' => 'string', 'length' => '50'));
    $this->hasColumn('description', 'string', null, array('type' => 'string'));


    $this->index('flag_idx', array('fields' => 'flag'));
    $this->index('category_idx', array('fields' => 'category'));
    $this->index('priority_idx', array('fields' => 'priority'));
    $this->index('status_idx', array('fields' => 'status'));

    $this->setAttribute(Doctrine::ATTR_EXPORT, Doctrine::EXPORT_ALL);

    $this->option('collate', 'utf8_unicode_ci');
    $this->option('charset', 'utf8');
  }

  public function setUp()
  {
    $this->hasOne('Resource as resource', array('local' => 'resource_id',
                                                'foreign' => 'id',
                                                'onDelete' => 'CASCADE'));

    $this->hasMany('Diary as events', array('local' => 'id',
                                            'foreign' => 'task_id'));

    $timestampable0 = new Doctrine_Template_Timestampable();
    $this->actAs($timestampable0);
  }
}