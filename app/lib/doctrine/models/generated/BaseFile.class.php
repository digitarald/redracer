<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseFile extends RedRacerDoctrineRecord
{
  public function setTableDefinition()
  {
    $this->setTableName('files');
    $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'unsigned' => true, 'length' => '4'));
    $this->hasColumn('release_id', 'integer', 4, array('type' => 'integer', 'unsigned' => true, 'notnull' => true, 'length' => '4'));
    $this->hasColumn('role', 'integer', 1, array('type' => 'integer', 'unsigned' => true, 'notnull' => true, 'default' => 0, 'length' => '1'));
    $this->hasColumn('name', 'string', 50, array('type' => 'string', 'length' => '50'));
    $this->hasColumn('folder', 'boolean', null, array('type' => 'boolean', 'unsigned' => true, 'notnull' => true, 'default' => 0));
    $this->hasColumn('description', 'string', 500, array('type' => 'string', 'length' => '500'));
    $this->hasColumn('md5', 'string', 32, array('type' => 'string', 'length' => '32'));
    $this->hasColumn('sha', 'string', 40, array('type' => 'string', 'length' => '40'));
    $this->hasColumn('downloaded_at', 'timestamp', null, array('type' => 'timestamp'));
    $this->hasColumn('url', 'string', 250, array('type' => 'string', 'length' => '250'));


    $this->index('name_idx', array('fields' => 'name'));

    $this->setAttribute(Doctrine::ATTR_EXPORT, Doctrine::EXPORT_ALL);

    $this->option('collate', 'utf8_unicode_ci');
    $this->option('charset', 'utf8');
  }

  public function setUp()
  {
    $this->hasOne('Release as release', array('local' => 'release_id',
                                              'foreign' => 'id',
                                              'onDelete' => 'CASCADE'));

    $this->hasMany('Dependency as dependencies', array('local' => 'id',
                                                       'foreign' => 'file_id'));

    $this->hasMany('Dependency as target_dependencies', array('local' => 'id',
                                                              'foreign' => 'target_file_id'));

    $this->hasMany('Download as downloads', array('local' => 'id',
                                                  'foreign' => 'file_id'));

    $this->hasMany('Diary as events', array('local' => 'id',
                                            'foreign' => 'file_id'));

    $timestampable0 = new Doctrine_Template_Timestampable(array ());
    $nestedset0 = new Doctrine_Template_NestedSet(array('hasManyRoots' => true, 'rootColumnName' => 'root_id'));
    $this->actAs($timestampable0);
    $this->actAs($nestedset0);
  }
}