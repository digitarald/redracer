<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseUser extends RedRacerDoctrineRecord
{
  public function setTableDefinition()
  {
    $this->setTableName('users');
    $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'unsigned' => true, 'length' => '4'));
    $this->hasColumn('flag', 'integer', 3, array('type' => 'integer', 'unsigned' => true, 'notnull' => true, 'default' => 0, 'length' => '3'));
    $this->hasColumn('nickname', 'string', 250, array('type' => 'string', 'length' => '250'));
    $this->hasColumn('password', 'string', 256, array('type' => 'string', 'length' => '256'));
    $this->hasColumn('role', 'string', 50, array('type' => 'string', 'length' => '50'));
    $this->hasColumn('email', 'string', 250, array('type' => 'string', 'length' => '250'));
    $this->hasColumn('fullname', 'string', 250, array('type' => 'string', 'length' => '250'));
    $this->hasColumn('dob', 'date', null, array('type' => 'date'));
    $this->hasColumn('postcode', 'string', 24, array('type' => 'string', 'length' => '24'));
    $this->hasColumn('country', 'string', 2, array('type' => 'string', 'length' => '2'));
    $this->hasColumn('language', 'string', 2, array('type' => 'string', 'length' => '2'));
    $this->hasColumn('timezone', 'string', 2, array('type' => 'string', 'length' => '2'));
    $this->hasColumn('github_id', 'string', 50, array('type' => 'string', 'length' => '50'));
    $this->hasColumn('paypal_id', 'string', 50, array('type' => 'string', 'length' => '50'));
    $this->hasColumn('login_at', 'timestamp', null, array('type' => 'timestamp'));
    $this->hasColumn('login_ip', 'string', 15, array('type' => 'string', 'length' => '15'));


    $this->index('flag_idx', array('fields' => 'flag'));

    $this->setAttribute(Doctrine::ATTR_EXPORT, Doctrine::EXPORT_ALL);

    $this->option('collate', 'utf8_unicode_ci');
    $this->option('charset', 'utf8');
  }

  public function setUp()
  {
    $this->hasMany('Comment as comments', array('local' => 'id',
                                                'foreign' => 'user_id'));

    $this->hasMany('Contributor as contributors', array('local' => 'id',
                                                        'foreign' => 'user_id'));

    $this->hasMany('Download as downloads', array('local' => 'id',
                                                  'foreign' => 'user_id'));

    $this->hasMany('Diary as events', array('local' => 'id',
                                            'foreign' => 'user_id'));

    $this->hasMany('Hit as hits', array('local' => 'id',
                                        'foreign' => 'user_id'));

    $this->hasMany('Link as links', array('local' => 'id',
                                          'foreign' => 'user_id'));

    $this->hasMany('Release as releases', array('local' => 'id',
                                                'foreign' => 'user_id'));

    $this->hasMany('Resource as resources', array('local' => 'id',
                                                  'foreign' => 'user_id'));

    $this->hasMany('UserAuth as user_auths', array('local' => 'id',
                                                   'foreign' => 'user_id'));

    $this->hasMany('UserToken as user_tokens', array('local' => 'id',
                                                     'foreign' => 'user_id'));

    $timestampable0 = new Doctrine_Template_Timestampable();
    $geographical0 = new Doctrine_Template_Geographical();
    $this->actAs($timestampable0);
    $this->actAs($geographical0);
  }
}