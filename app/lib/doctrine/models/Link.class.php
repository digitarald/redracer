<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Link extends BaseLink
{
  /**
   * toArray
   *
   * @param      boolean $deep - Return also the relations
   * @return     array
   */
	public function toArray($deep = true, $prefixKey = false)
	{
		$ret = parent::toArray(false, $prefixKey);

		if ($ret['description']) {
			$ret['description_html'] = RedString::format($ret['description'], 4);
		}

		$bits = array();
		if ($ret['url']) {
			$bits = @parse_url($ret['url']);
		}
		$ret['parsed'] = $bits;

		$ret['url_edit'] = $this->getContext()->getRouting()->gen('resources.resource.links.link.edit', array(
			'resource' => $this['resource']['ident'],
			'link' => $ret['id']
		) );

		return $ret;
	}

	public function getFlagMask()
	{
		$flag = (int) $this['flag'];
		$mask = array();
		foreach (self::$flags as $bit => $text) {
			if ($flag & $bit) {
				$mask[] = $bit;
			}
		}
		return $mask;
	}

	public function setFlagMask(array $mask)
	{
		$bits = 0;
		foreach ($mask as $bit) {
			$bits .= $bit;
		}
		$this['flag'] = (string) $bits;
	}
}